{"version":3,"sources":["asssets/images sync /^/.//.*$","asssets/songs sync /^/.//.*$","asssets/images/kennebunkportrevival.png","asssets/songs/catullus.m4a","asssets/songs/maineday6.m4a","asssets/songs/startagain.m4a","asssets/songs/stolendance.m4a","asssets/songs/takemethere.m4a","components/homepagecomponents/nav.js","components/homepagecomponents/header.js","components/homepagecomponents/song.js","components/homepagecomponents/playlist.js","components/homepagecomponents/addPlaylistSong.js","components/homepagecomponents/addedPlaylistSong.js","components/homepagecomponents/createPlaylist.js","components/homepagecomponents/editPlaylist.js","components/homepagecomponents/listennow.js","components/homepagecomponents/albumSong.js","components/homepagecomponents/album.js","components/homepagecomponents/browse.js","components/homepagecomponents/albums.js","components/homepagecomponents/artists.js","components/homepagecomponents/songs.js","components/home/homeDesktop.js","components/homepagecomponents/navMobile.js","components/homepagecomponents/headerMobile.js","components/homepagecomponents/albumNavMobile.js","components/home/homeMobile.js","components/home.js","components/admin.js","components/login.js","components/signup.js","components/settings.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Nav","logout","localStorage","clear","window","location","reload","cardStyle","display","flexDirection","alignItems","borderRadius","height","margin","selectedCardStyle","backgroundColor","cardTextDivStyle","iconStyle","color","marginRight","buttonStyle","width","listennow","style","browse","artists","albums","songs","this","props","page","loginLogoutSignup","href","Button","variant","getItem","onClick","position","paddingTop","className","listStyle","setPage","React","Component","Header","playArrowStyle","fontSize","arrowStyle","sliderVolume","audio","volume","elapsedTimePercent","currentTime","duration","isNaN","current","Date","toISOString","substr","playpause","total","playBool","pause","play","prevSong","nextSong","justifyContent","artist","name","song","type","min","max","onChange","timeScrub","value","volumeChange","images","require","Song","gridTemplateColumns","paddingLeft","paddingRight","paddingBottom","marginBottom","albumCoverImgStyle","JSON","stringify","songWrapper","playing","src","album","img_url","default","alt","index","playSingleSong","Playlist","delete","playlist","back","headingStyle","infoDivStyle","padding","playEntirePlaylistButtonStyle","playlist_type","playPlaylist","editPlaylist","songWrappers","AddPlaylistSong","addSong","AddedPlaylistSong","deleteSong","CreatePlaylist","createPlaylistHandler","a","playlistname","getPlaylistName","requestOptions","method","headers","body","fetch","newPlaylist","status","json","jSongs","jnewPlaylist","setState","newSingles","loadSongsInPlaylist","prompt","searchForSong","state","searchBarValue","searchedSongs","handleSearchBarChange","event","target","tryRefreshToken","refresh","response","jResponse","setItem","access","createSongWrapper","createRequestHandler","sendToLogin","order","deleteSongWrapper","songWrapperId","deleteRequestHandler","songsInPlaylist","searchMessage","newSinglesDiv","marginTop","borderTop","htmlFor","placeholder","EditPlaylist","backToListenNow","jPlaylist","ListenNow","tryAccessToken","playlists","console","log","jPlaylists","message","redirect","loadPlaylist","currentPlaylist","loadCreatePlaylist","createPlaylist","loadEditPlaylist","deletePlaylist","playlistId","mainDivStyle","maxWidth","to","length","marginLeft","Card","Body","Title","AlbumSong","minHeight","playButtonShow","Album","Browse","loadAlbum","displayAlbum","artistName","artistEssentials","essentials","jEssentials","jnewSingles","jAlbum","backButtonStyle","borderBottom","Albums","albumObj","jAlbums","Artists","loadArtist","backToArtists","backToArtist","playlistName","jArtists","Songs","mp3s","HomeDesktop","setPlayListSong","setSong","newAudio","Audio","url","addEventListener","controlVolume","songIndex","songId","jSong","tempAudio","newVolume","newTime","setPlaylistView","infoPlaylistId","NavMobile","HeaderMobile","showAlbumNav","AlbumMobileNav","hideAlbumNav","HomeMobile","albumNav","outerDivStyle","outerMainDivStyle","classname","overflow","bottom","showSettings","Home","updateWindowDimensions","innerWidth","removeEventListener","Admin","Img","Text","Login","usernameChange","username","passwordChange","password","login","preventDefault","user_name","titleStyle","inputStyle","onSubmit","Signup","firstnameChange","firstname","emailChange","email","confirmationChange","confirmation","signup","Settings","App","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1448270.chunk.js","sourcesContent":["var map = {\n\t\"./kennebunkportrevival.png\": 68\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","var map = {\n\t\"./catullus.m4a\": 73,\n\t\"./maineday6.m4a\": 74,\n\t\"./startagain.m4a\": 75,\n\t\"./stolendance.m4a\": 76,\n\t\"./takemethere.m4a\": 77\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 47;","export default __webpack_public_path__ + \"static/media/kennebunkportrevival.0239da41.png\";","export default __webpack_public_path__ + \"static/media/catullus.5087ae52.m4a\";","export default __webpack_public_path__ + \"static/media/maineday6.5ae64ed5.m4a\";","export default __webpack_public_path__ + \"static/media/startagain.fe638531.m4a\";","export default __webpack_public_path__ + \"static/media/stolendance.cddd4be6.m4a\";","export default __webpack_public_path__ + \"static/media/takemethere.c9ab0a4f.m4a\";","import React from \"react\";\nimport PLayCircle from '@material-ui/icons/PlayCircleOutlineOutlined';\nimport MusicNote from '@material-ui/icons/MusicNote';\nimport Groups from '@material-ui/icons/Group';\nimport Album from '@material-ui/icons/LibraryMusic';\nimport Equalizer from '@material-ui/icons/Equalizer';\nimport Button from 'react-bootstrap/Button';\nimport '../../css/nav.css';\n\nexport default class Nav extends React.Component {\n  \n  // clears the user's tokens from local storage, therefore logging them out\n  logout = () => {\n    localStorage.clear();\n    window.location.reload();\n  }\n  render() {\n    const outerDivStyle = {\n      backgroundColor: 'rgb(57, 67, 82)',  \n      height: '100%',\n      width: '100%',\n      position: 'relative',\n      paddingTop: '1rem',\n    }\n    const ulStyle = { \n      listStyle: 'none', \n      color: 'white', \n    }\n    const cardStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '15px',\n      height: '1.5rem',\n      margin: '1rem 0 1rem 0'\n    }\n    const selectedCardStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '15px',\n      height: '1.5rem',\n      margin: '1rem 0 1rem 0',\n      backgroundColor: 'rgba(202, 200, 200, 0.2)'\n    }\n    const cardTextDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '100%',\n    }\n    const iconStyle = {\n      color: 'rgb(219, 9, 89)',\n      marginRight: '1rem',\n    }\n    const buttonStyle = {\n      width: '5rem',\n      margin: '0.5rem',\n    }\n\n    // default styles for all the tabs in the nav bar\n    let listennow =\n    <div style={cardStyle}>\n      <PLayCircle style={iconStyle}></PLayCircle>\n      <div style={cardTextDivStyle}>\n        <p>Listen Now</p>\n      </div>\n    </div>;\n\n    let browse = \n    <div style={cardStyle}>\n      <MusicNote style={iconStyle}></MusicNote>\n      <div style={cardTextDivStyle}>\n        <p>Browse</p>\n      </div>\n    </div>;\n\n    let artists = \n    <div style={cardStyle}>\n      <Groups style={iconStyle}></Groups>\n      <div style={cardTextDivStyle}>\n        <p>Artists</p>\n      </div>\n    </div>;\n\n    let albums =\n    <div style={cardStyle}>\n      <Album style={iconStyle}></Album>\n      <div style={cardTextDivStyle}>\n      <p>Albums</p>\n      </div>\n    </div>;\n\n    let songs = \n    <div style={cardStyle}>\n      <Equalizer style={iconStyle}></Equalizer>\n      <div style={cardTextDivStyle}>\n      <p>Songs</p>\n      </div>\n    </div>;\n\n    // replaces the default tab with a highlighted tab for the selected page\n    switch (this.props.page) {\n      case 'listennow':\n        listennow = \n        <div style={selectedCardStyle}>\n          <PLayCircle style={iconStyle}></PLayCircle>\n          <div style={cardTextDivStyle}>\n            <p>Listen Now</p>\n          </div>\n        </div>;\n        break;\n      case 'browse':\n        browse = \n        <div style={selectedCardStyle}>\n          <MusicNote style={iconStyle}></MusicNote>\n          <div style={cardTextDivStyle}>\n            <p>Browse</p>\n          </div>\n        </div>;\n        break;\n      case 'artists':\n        artists = \n        <div style={selectedCardStyle}>\n          <Groups style={iconStyle}></Groups>\n          <div style={cardTextDivStyle}>\n            <p>Artists</p>\n          </div>\n        </div>;\n        break;\n      case 'albums':\n        albums = \n        <div style={selectedCardStyle}>\n          <Album style={iconStyle}></Album>\n          <div style={cardTextDivStyle}>\n          <p>Albums</p>\n          </div>\n        </div>;\n        break;\n        case 'album':\n          albums = \n          <div style={selectedCardStyle}>\n            <Album style={iconStyle}></Album>\n            <div style={cardTextDivStyle}>\n            <p>Albums</p>\n            </div>\n          </div>;\n          break;\n      case 'songs':\n        songs = \n        <div style={selectedCardStyle}>\n            <Equalizer style={iconStyle}></Equalizer>\n            <div style={cardTextDivStyle}>\n            <p>Songs</p>\n            </div>\n          </div>;\n      break;\n      default: \n      listennow = \n        <div style={selectedCardStyle}>\n          <PLayCircle style={iconStyle}></PLayCircle>\n          <div style={cardTextDivStyle}>\n            <p>Listen Now</p>\n          </div>\n        </div>;\n    }\n    // by default this should be loginSignup\n    let loginLogoutSignup = \n    <div>\n      <li>\n        <a href=\"/#/login\">\n          <Button style={buttonStyle} variant=\"secondary\">Login</Button>\n        </a>\n      </li>\n      <li>\n        <a href=\"/#/signup\">\n          <Button style={buttonStyle} variant=\"secondary\">Signup</Button>\n        </a>\n      </li>\n    </div>\n    if (localStorage.getItem('access')){\n      loginLogoutSignup = \n      <li>\n        <Button style={buttonStyle} variant=\"secondary\" onClick={this.logout}>Logout</Button>\n      </li>\n    }\n    return (\n      <div style={outerDivStyle}>\n        <ul className='nav-list' style={ulStyle}>\n          <li onClick={() => this.props.setPage('listennow')}>\n            {listennow}\n          </li>\n          <li onClick={() => this.props.setPage('browse')}>\n            {browse}\n          </li>\n          <li onClick={() => this.props.setPage('artists')}>\n            {artists}\n          </li>\n          <li onClick={() => this.props.setPage('albums')}>\n           {albums}\n          </li>\n          <li onClick={() => this.props.setPage('songs')}>\n           {songs}\n          </li>\n          {loginLogoutSignup}\n        </ul>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport RewindArrow from '@material-ui/icons/FastRewind';\nimport FfArrow from '@material-ui/icons/FastForward';\nimport PlayArrow from '@material-ui/icons/PlayArrow'\nimport Pause from '@material-ui/icons/Pause'\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport '../../css/header.css'\n\nexport default class Header extends React.Component {\n  \n  render() {\n    const outerDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      width: '100%',\n      height: '100%',\n    }\n    const arrowDivStyle = {\n      color: 'white',\n      margin: 'auto',\n    }\n    const playArrowStyle = {\n      fontSize: '3rem'\n    }\n    const arrowStyle = {\n      fontSize: '2rem'\n    }\n    const playingSliderDiv = {\n      width: '25rem',\n      display: 'flex',\n      flexDirection: 'column',\n    }\n    const timeSliderDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      color: 'white',\n      alignItems: 'center'\n    }\n    const songInfoDiv = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'flex-end',\n      color: 'white',\n      width: '100%',\n      height: '3rem',\n    }\n    const volumeSliderDivStyle = {\n      color: 'white',\n      width: '12rem',\n      height: '2rem',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      margin: 'auto',\n    }\n    const volumeDownStyle = {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'col',\n      justifyContent: 'flex-end'\n    }\n    const volumeUpStyle = {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'col',\n      justifyContent: 'center'\n    }\n    \n    // calculations\n    const sliderVolume = 100 * this.props.audio.volume;\n    let elapsedTimePercent = this.props.currentTime/this.props.duration * 100;\n    if (isNaN(elapsedTimePercent)) {\n      elapsedTimePercent = 0\n    };\n    let current = 0;\n    if (!isNaN(this.props.currentTime)) {\n      current = new Date(this.props.currentTime * 1000).toISOString().substr(14, 5);\n    }\n    let total = 0;\n    if (!isNaN(this.props.duration)) {\n      total = new Date(this.props.duration * 1000).toISOString().substr(14, 5);\n    }\n    // return pause arrow or play arrow based on if song is currently playing\n    // or not\n    let playpause; \n    if (this.props.playBool) {\n      playpause = <Pause onClick={() => this.props.pause()} style={playArrowStyle}></Pause>\n    }\n    else {\n      playpause = <PlayArrow onClick={() => this.props.play()} style={playArrowStyle}></PlayArrow>\n    }\n\n    return (\n      <div style={outerDivStyle}>\n        <div style={arrowDivStyle}>\n          <RewindArrow onClick={this.props.prevSong} style={arrowStyle}></RewindArrow>\n          {playpause}\n          <FfArrow onClick={this.props.nextSong} style={arrowStyle}></FfArrow>\n        </div>\n        <div style={playingSliderDiv}>\n          <div style={songInfoDiv}>\n            <div>{this.props.artist.name}</div>\n            <div>{this.props.song.name}</div>\n          </div>\n          <div style={timeSliderDivStyle}>\n            <div>{current}</div>\n            <input className=\"slider\" type=\"range\" min=\"0\" max=\"100\" onChange={this.props.timeScrub} value={elapsedTimePercent}></input>\n            <div>{total}</div>\n          </div>\n        </div>\n        <div style={volumeSliderDivStyle}>\n          <div style={volumeDownStyle}>\n           <VolumeDown/>\n          </div>\n          <input type=\"range\" min=\"1\" max=\"100\" onChange={this.props.volumeChange} value={sliderVolume} id=\"myRange\"/>\n          <div style={volumeUpStyle}>\n            <VolumeUp/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Play from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nconst images = require.context(\"../../asssets/images\", true);\n\nexport default class Song extends React.Component {\n\n  render() {\n    const cardStyle = {\n      position: 'relative',\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: ' 1fr 1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      paddingTop: '0.25rem',\n      paddingBottom: '0.25rem',\n      marginBottom: '0.5rem',\n      borderRadius: '5px'\n    }\n    const albumCoverImgStyle = {\n      height: '48px',\n      width: '48px'\n    }\n    // need three conditions:\n    // if the song loaded to play is the smae as the song connected to this \n    // component, and the song is playing, display a \n    if (JSON.stringify(this.props.song) === JSON.stringify(this.props.songWrapper.song) && this.props.playing){\n      return (\n        <div style={cardStyle} key={this.props.index}>\n            <div>\n              <img \n              style={albumCoverImgStyle} src={images(`./${this.props.songWrapper.song.album.img_url}`).default} \n              alt=\"Album cover\" className=\"albumCover\">\n              </img>\n            </div>\n            <div>\n              <Pause onClick={() => {\n                this.props.pause()\n                }}></Pause>\n            </div>\n            <div>{this.props.songWrapper.song.name}</div>\n            <div>{this.props.songWrapper.song.artist.name}</div>\n        </div>\n      )\n    }\n    // if the song that's queued up is the same as the song that's connected\n    // to this component and the song is NOT playing, display a play button \n    // that resumes playing the song where it left off\n    else if (JSON.stringify(this.props.song) === JSON.stringify(this.props.songWrapper.song)){\n      return (\n      <div style={cardStyle} key={this.props.index}>\n          <div>\n            <img \n            style={albumCoverImgStyle} src={images(`./${this.props.songWrapper.song.album.img_url}`).default} \n            alt=\"Album cover\" className=\"albumCover\">\n            </img>\n          </div>\n          <div>\n            <Play onClick={() => this.props.play()}></Play> \n          </div>\n          <div>{this.props.songWrapper.song.name}</div>\n          <div>{this.props.songWrapper.song.artist.name}</div>\n      </div>\n      )\n    }\n    // if the song playing is not the same song as the one connected with this \n    // component then the play button will load the song associated with this\n    // component in place of the current song and will start playing it\n    else {\n      return (\n      <div style={cardStyle} key={this.props.index}>\n          <div>\n            <img \n            style={albumCoverImgStyle} src={images(`./${this.props.songWrapper.song.album.img_url}`).default} \n            alt=\"Album cover\" className=\"albumCover\">\n            </img>\n          </div>\n          <div>\n            <Play onClick={() => this.props.playSingleSong(this.props.songWrapper.song.id)}></Play> \n          </div>\n          <div>{this.props.songWrapper.song.name}</div>\n          <div>{this.props.songWrapper.song.artist.name}</div>\n      </div>\n      )\n    }\n  }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Song from \"./song\";\n\nexport default class Playlist extends React.Component {\n  // deletes the playlist \n  delete = () => {\n    this.props.delete(this.props.playlist.id);\n    this.props.back()\n  }\n\n  render() {\n    const headingStyle = {\n      color: 'white',\n    }\n\n    const infoDivStyle = {\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: '0 1rem',\n      margin: '0 auto 0.5rem auto',\n    }\n\n    const playEntirePlaylistButtonStyle = {\n      margin: '1rem',\n    }\n\n    if (this.props.playlist.playlist_type === \"Playlist\") {\n    return (\n      <div style={headingStyle}>\n      <h1 >{this.props.playlist.name}</h1>\n        <Button onClick={() => this.props.playPlaylist(this.props.playlist.id)} \n        style={playEntirePlaylistButtonStyle}>Play Entire Playlist</Button>\n        <Button variant=\"secondary\" onClick={() => this.props.editPlaylist()} >Edit</Button>\n        <div style={infoDivStyle}>\n          <div>Album</div>\n          <div>Play/Pause</div>\n          <div>Song</div>\n          <div>Artist</div>\n        </div>\n        {this.props.songWrappers.map((songWrapper, index) => {\n        return (\n          <Song \n          index={index} \n          songWrapper={songWrapper} \n          song={this.props.song}\n          playSingleSong={this.props.playSingleSong} \n          play={this.props.play}\n          pause={this.props.pause}\n          playing={this.props.playing}\n          ></Song>\n        )\n      })}\n      <Button variant=\"secondary\" onClick={() => this.delete()}>Delete Playlist</Button>\n    </div>\n    )\n    }\n    return (\n      <div style={headingStyle}>\n      <h1 >{this.props.playlist.name}</h1>\n        <Button onClick={() => this.props.playPlaylist(this.props.playlist.id)}\n        style={playEntirePlaylistButtonStyle}>Play Entire Playlist</Button>\n        <div style={infoDivStyle}>\n          <div>Album</div>\n          <div>Play/Pause</div>\n          <div>Song</div>\n          <div>Artist</div>\n        </div>\n        {this.props.songWrappers.map((songWrapper, index) => {\n        return (\n          <Song \n          index={index} \n          songWrapper={songWrapper} \n          song={this.props.song}\n          playSingleSong={this.props.playSingleSong} \n          play={this.props.play}\n          pause={this.props.pause}\n          playing={this.props.playing}\n          ></Song>\n        )\n      })}\n    </div>\n    )\n  }\n}","import React from \"react\";\nimport Add from '@material-ui/icons/Add';\nconst images = require.context(\"../../asssets/images\", true);\n\n// component displayed for song that has not yet been added to the playlist\nexport default class AddPlaylistSong extends React.Component {\n\n  render() {\n    const cardStyle = {\n      position: 'relative',\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: ' 1fr 1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      marginBottom: '0.5rem',\n    }\n    const albumCoverImgStyle = {\n      height: '48px',\n      width: '48px'\n    }\n    const addSongDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'white',\n      fontSize: 'small'\n    }\n      return (\n      <div style={cardStyle} key={this.props.index}>\n          <div>\n            <img \n            style={albumCoverImgStyle} src={images(`./${this.props.song.album.img_url}`).default} \n            alt=\"Album cover\" className=\"albumCover\">\n            </img>\n          </div>\n          <div>{this.props.song.name}</div>\n          <div>{this.props.song.artist.name}</div>\n          <div style={addSongDivStyle}>\n            <div>Add Song</div>\n            <Add onClick={() => this.props.addSong(this.props.song.id)}></Add>\n          </div>\n      </div>\n      )\n  }\n}","import React from \"react\";\nimport Minus from '@material-ui/icons/RemoveOutlined';\nconst images = require.context(\"../../asssets/images\", true);\n\n// component displayed for a song that's already added to the playlist\nexport default class AddedPlaylistSong extends React.Component {\n\n  render() {\n    const cardStyle = {\n      position: 'relative',\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: ' 1fr 1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      marginBottom: '0.5rem',\n    }\n    const albumCoverImgStyle = {\n      height: '48px',\n      width: '48px'\n    }\n    const addSongDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'white',\n      fontSize: 'small'\n    }\n      return (\n      <div style={cardStyle} key={this.props.index}>\n          <div>\n            <img \n            style={albumCoverImgStyle} src={images(`./${this.props.songWrapper.song.album.img_url}`).default} \n            alt=\"Album cover\" className=\"albumCover\">\n            </img>\n          </div>\n          <div>{this.props.songWrapper.song.name}</div>\n          <div>{this.props.songWrapper.song.artist.name}</div>\n          <div style={addSongDivStyle}>\n            <div>Delete Song</div>\n            <Minus onClick={() => this.props.deleteSong(this.props.songWrapper.id)}></Minus>\n          </div>\n      </div>\n      )\n  }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport AddPlaylistSong from \"./addPlaylistSong\";\nimport AddedPlaylistSong from \"./addedPlaylistSong\";\nimport { Redirect } from 'react-router';\n\n// create playlist component\nexport default class CreatePlaylist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist: {},\n      newSingles: [],\n      songsInPlaylist: [],\n      searchedSongs: [],\n      searchBarValue: \"\",\n      searchMessage: \"\",\n      order: 0,\n      sendToLogin: false,\n    }\n  }\n\n  // handle logic for getting new sign in and refresh tokens\n  async componentDidMount() {\n    const accessTokenWorked = await this.createPlaylistHandler();\n    if (!accessTokenWorked) {\n      const refreshTokenWorked = await this.tryRefreshToken();\n    if (refreshTokenWorked) {\n      this.createPlaylistHandler()\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n\n  // creates a new playlist, returns true or false depending on success\n  // of call to backend\n  createPlaylistHandler = async () => {\n    let playlistname = this.getPlaylistName()\n    if (playlistname === \"\" || playlistname === null){\n      this.props.back();\n    }\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n      body: JSON.stringify({ name: playlistname })\n    };\n    const newPlaylist = await fetch('https://desi-music-player.herokuapp.com/api/playlists/', requestOptions);\n    // top songs to quick add \n    const songs = await fetch('https://desi-music-player.herokuapp.com/api/playlists/playlist/10/songs/');\n    if (newPlaylist.status !== 500 && songs.status !== 401){\n      const jSongs = await songs.json();\n      const jnewPlaylist = await newPlaylist.json();\n      this.setState({ newSingles: jSongs, playlist: jnewPlaylist });\n      // !!! not sure this is needed here\n      this.loadSongsInPlaylist();\n      return true;\n    }\n    return false;\n  }\n\n  // prompts user to give name for playlist \n  getPlaylistName = () => {\n    const playlistname = prompt(\"Give the Playlist a Name\");\n    return playlistname\n  }\n\n  // searches backend for songs whose names match whats been typed in\n  // the search bar\n  searchForSong = async () => {\n    const songs = await fetch(`https://desi-music-player.herokuapp.com/api/songs/song/songbyname/${this.state.searchBarValue}/`);\n    const jSongs = await songs.json();\n    this.setState({ searchedSongs: jSongs });\n  }\n\n  handleSearchBarChange = (event) => {\n    this.setState({ searchBarValue: event.target.value });\n  }\n\n  // tests if refresh token is still valid, if so, its sets new refresh\n  // and access tokens in local storage, otherwise it returns false \n  tryRefreshToken = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refresh: localStorage.getItem('refresh') })\n    };\n    const response = await fetch('https://desi-music-player.herokuapp.com/api/token/refresh/', requestOptions)\n    if(response.status === 200) {\n      const jResponse = await response.json();\n      localStorage.setItem(\"refresh\", jResponse.refresh);\n      localStorage.setItem(\"access\", jResponse.access);\n      return true;\n    } \n    else {\n      return false;\n    }\n  }\n\n  // test if the user is authorized to interact with backend and sends them\n  // to login page if refresh and auth tokens are expired\n  createSongWrapper = async (song) => {\n    const accessTokenWorked = await this.createRequestHandler(song);\n    if (!accessTokenWorked) {\n      const refreshTokenWorked = await this.tryRefreshToken();\n    if (refreshTokenWorked) {\n      this.createRequestHandler(song)\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n\n  // creates songwrapper with the current playlist and the newly selected \n  // song, therefore linking the two in the backend\n  createRequestHandler = async (song) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n      body: JSON.stringify({ song, order: this.state.order, playlist: this.state.playlist.id })\n    };\n    const songWrapper = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${this.state.playlist.id}/songs/`, requestOptions);\n    if (songWrapper.status !== 401) {\n      let order = this.state.order;\n      order++;\n      this.setState({ order });\n      this.loadSongsInPlaylist();\n      return true;\n    }\n    return false;\n  } \n\n  // test if the user is authorized to interact with backend and sends them\n  // to login page if refresh and auth tokens are expired\n  deleteSongWrapper = async (songWrapperId) => {\n    const accessTokenWorked = await this.deleteRequestHandler(songWrapperId);\n    if (!accessTokenWorked) {\n      const refreshTokenWorked = await this.tryRefreshToken();\n    if (refreshTokenWorked) {\n      this.this.deleteRequestHandler(songWrapperId)\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n\n  // deletes songwrapper\n  deleteRequestHandler = async (songWrapperId) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n    };\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/songwrappers/songwrapper/${songWrapperId}/`, requestOptions);\n    if (response.status !== 401) {\n      this.loadSongsInPlaylist();\n      return true;\n    }\n    return false;\n  }\n\n  // gets songs from the playlist being made and saves them in state to be \n  // displayed\n  // !!! probably can be refactored out\n  loadSongsInPlaylist = async () => {\n    const songs = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${this.state.playlist.id}/songs/`);\n    const jSongs = await songs.json();\n    this.setState({ songsInPlaylist: jSongs});\n  }\n\n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    const searchBarContainerStyle = {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n    const searchBarStyle = {\n      width: '20rem'\n    }\n    const searchButtonStyle = {\n      width: '10rem'\n    }\n    const newSinglesDiv = {\n      marginTop: '5rem',\n      borderTop: '1px solid white'\n    }\n\n      if (this.state.sendToLogin) {\n        <Redirect to=\"/#/login\"></Redirect>\n      }\n      return (\n        <div style={mainDivStyle}>\n          <Button onClick={this.props.back}>Done</Button>\n          <h1>{this.state.playlist.name}</h1>\n          <form style={searchBarContainerStyle}>\n              <label htmlFor=\"songSearch\">Search for a song by name</label>\n              <input onChange={this.handleSearchBarChange} style={searchBarStyle} id=\"songSearch\" placeholder=\"Song Name\"></input>\n              <input onClick={() => this.searchForSong()} style={searchButtonStyle} type=\"button\" value=\"Search\"></input>\n          </form>\n          <div style={newSinglesDiv}>\n           <h4>Results</h4>\n            {this.state.searchedSongs.map((song, index) => {\n              return (\n                <AddPlaylistSong \n                index={index} \n                song={song} \n                addSong={this.createSongWrapper}\n                >\n                </AddPlaylistSong>\n              )\n            })}\n          </div>\n          <div style={newSinglesDiv}>\n            <h4>Songs in this Playlist</h4>\n            {this.state.songsInPlaylist.map((songWrapper, index) => {\n              return (\n                <AddedPlaylistSong \n                index={index} \n                songWrapper={songWrapper} \n                addSong={this.createSongWrapper}\n                deleteSong={this.deleteSongWrapper}\n                >\n                </AddedPlaylistSong>\n              )\n            })}\n          </div>\n          <div style={newSinglesDiv}>\n            <h4>New Singles</h4>\n            {this.state.newSingles.map((songWrapper, index) => {\n              return (\n                <AddPlaylistSong \n                index={index} \n                song={songWrapper.song} \n                addSong={this.createSongWrapper}\n                >\n                </AddPlaylistSong>\n              )\n            })}\n          </div>\n        </div>\n      )\n  }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport AddPlaylistSong from \"./addPlaylistSong\";\nimport AddedPlaylistSong from \"./addedPlaylistSong\";\nimport { Redirect } from 'react-router';\n\n// !!! should be refactored to more closely align with the \n// structure of createPlaylist.js\nexport default class EditPlaylist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist: {},\n      backToListenNow: false,\n      newSingles: [],\n      songsInPlaylist: [],\n      searchedSongs: [],\n      searchBarValue: \"\",\n      searchMessage: \"\",\n      order: 0,\n      sendToLogin: false,\n    }\n  }\n\n  // load songs from this playlist and display them in state\n  async componentDidMount() {\n    const playlist = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${this.props.playlist.id}/` );\n    const jPlaylist = await playlist.json();\n    // top songs to quick add\n    const songs = await fetch('https://desi-music-player.herokuapp.com/api/playlists/playlist/10/songs/');\n    const jSongs = await songs.json();\n    this.setState({ newSingles: jSongs, playlist: jPlaylist });\n    this.loadSongsInPlaylist();\n  }\n\n  // tries to get and set new refresh and access tokens, if it fails,\n  // the function returns false\n  tryRefreshToken = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refresh: localStorage.getItem('refresh') })\n    };\n    const response = await fetch('https://desi-music-player.herokuapp.com/api/token/refresh/', requestOptions)\n    if(response.status === 200) {\n      const jResponse = await response.json();\n      localStorage.setItem(\"refresh\", jResponse.refresh);\n      localStorage.setItem(\"access\", jResponse.access);\n      return true;\n    } \n    else {\n      return false;\n    }\n  }\n\n  // search backend for song based on input in search bar and add returned \n  // songs to state to be displayed as results\n  searchForSong = async () => {\n    const songs = await fetch(`https://desi-music-player.herokuapp.com/api/songs/song/songbyname/${this.state.searchBarValue}/`);\n    const jSongs = await songs.json();\n    this.setState({ searchedSongs: jSongs });\n  }\n\n  handleSearchBarChange = (event) => {\n    this.setState({ searchBarValue: event.target.value });\n  }\n\n  // calls function to create songwrapper after checking if the user's \n  // tokens have expired\n  createSongWrapper = async (song) => {\n    const accessTokenWorked = await this.createRequestHandler(song);\n    if (!accessTokenWorked) {\n      const refreshTokenWorked = await this.tryRefreshToken();\n    if (refreshTokenWorked) {\n      this.createRequestHandler(song)\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n  \n  // creates song wrapper with currently selected playlist and song, \n  // therefore linking them in the backend\n  createRequestHandler = async (song) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n      body: JSON.stringify({ song, order: this.state.order, playlist: this.state.playlist.id })\n    };\n    const songWrapper = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${this.state.playlist.id}/songs/`, requestOptions);\n    if (songWrapper.status !== 401) {\n      let order = this.state.order;\n      order++;\n      this.setState({ order });\n      this.loadSongsInPlaylist();\n      return true;\n    }\n    return false;\n  } \n\n  // calls function to delete songwrapper after checking if the user's \n  // tokens have expired\n  deleteSongWrapper = async (songWrapperId) => {\n    const accessTokenWorked = await this.deleteRequestHandler(songWrapperId);\n    if (!accessTokenWorked) {\n      const refreshTokenWorked = await this.tryRefreshToken();\n    if (refreshTokenWorked) {\n      this.this.deleteRequestHandler(songWrapperId)\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n\n  // deletes song wrapper with currently selected playlist and song, \n  // therefore linking them in the backend\n  deleteRequestHandler = async (songWrapperId) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n    };\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/songwrappers/songwrapper/${songWrapperId}/`, requestOptions);\n    if (response.status !== 401) {\n      this.loadSongsInPlaylist();\n      return true;\n    }\n    return false;\n  }\n\n  // gets the songs in the current playlist and loads them in state\n  loadSongsInPlaylist = async () => {\n    const songs = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${this.state.playlist.id}/songs/`);\n    const jSongs = await songs.json();\n    this.setState({ songsInPlaylist: jSongs});\n  }\n  \n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    const searchBarContainerStyle = {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n    const searchBarStyle = {\n      width: '20rem'\n    }\n    const searchButtonStyle = {\n      width: '10rem'\n    }\n    const newSinglesDiv = {\n      marginTop: '5rem',\n      borderTop: '1px solid white'\n    }\n      if (this.state.sendToLogin) {\n        <Redirect to=\"/#/login\"></Redirect>\n      }\n      return (\n        <div style={mainDivStyle}>\n          <Button onClick={this.props.back}>Done</Button>\n          <h1>{this.state.playlist.name}</h1>\n          <form style={searchBarContainerStyle}>\n              <label htmlFor=\"songSearch\">Search for a song by name</label>\n              <input onChange={this.handleSearchBarChange} style={searchBarStyle} id=\"songSearch\" placeholder=\"Song Name\"></input>\n              <input onClick={() => this.searchForSong()} style={searchButtonStyle} type=\"button\" value=\"Search\"></input>\n          </form>\n          <div style={newSinglesDiv}>\n           <h4>Results</h4>\n            {this.state.searchedSongs.map((song, index) => {\n              return (\n                <AddPlaylistSong \n                index={index} \n                song={song} \n                addSong={this.createSongWrapper}\n                >\n                </AddPlaylistSong>\n              )\n            })}\n          </div>\n          <div style={newSinglesDiv}>\n            <h4>Songs in this Playlist</h4>\n            {this.state.songsInPlaylist.map((songWrapper, index) => {\n              return (\n                <AddedPlaylistSong \n                index={index} \n                songWrapper={songWrapper} \n                deleteSong={this.deleteSongWrapper}\n                >\n                </AddedPlaylistSong>\n              )\n            })}\n          </div>\n        </div>\n      )\n  }\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Playlist from \"./playlist\";\nimport CreatePlaylist from \"./createPlaylist\";\nimport EditPlaylist from \"./editPlaylist\";\nimport { Redirect } from 'react-router';\n\n\nexport default class ListenNow extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      createPlaylist: false,\n      playlist: false,\n      editPlaylist: false,\n      currentPlaylist: {},\n      songWrappers: [],\n      playlists: [],\n      songs: [],\n      sendToLogin: false,\n    }\n}\n\n  // checks if user's tokens have expired and sends them to login screen if \n  // they have expired\n  async componentDidMount() {\n   const accessTokenWorked = await this.tryAccessToken();\n    if (!accessTokenWorked) {\n    const refreshTokenWorked = await this.tryRefreshToken();\n\n    if (refreshTokenWorked) {\n      await this.tryAccessToken();\n    }\n    else {\n      this.setState({ sendToLogin: true });\n    }\n   }\n  }\n\n  // tries to return current users playlists\n  // returns true if connection to backend is successful and false otherwise\n  tryAccessToken = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n    }\n    const playlists = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/`, requestOptions);\n    console.log(playlists.status)\n    if (playlists.status !== 401 && playlists.status !== 500) {\n      const jPlaylists = await playlists.json();\n      this.setState({\n        playlists: jPlaylists,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  // tries to reset refresh and access tokens if possible, returns true \n  // if it is possible and false otherwise\n  tryRefreshToken = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refresh: localStorage.getItem('refresh') })\n    };\n    const response = await fetch('https://desi-music-player.herokuapp.com/api/token/refresh/', requestOptions)\n    if(response.status === 200) {\n      const jResponse = await response.json();\n      this.setState({message: \"Logged In\", redirect: true});\n      localStorage.setItem(\"refresh\", jResponse.refresh);\n      localStorage.setItem(\"access\", jResponse.access);\n      return true;\n    } \n    else {\n      return false;\n    }\n  }\n\n  // get playlist information from backend and save said information in state\n  loadPlaylist = async (playlist) => {\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlist.id}/songs/`)\n    const jResponse = await response.json();\n    this.setState({ \n      playlist: true,\n      currentPlaylist: playlist,\n      songWrappers: jResponse,\n    });\n  }\n\n  // load page for user to create playlist\n  loadCreatePlaylist = () => {\n    this.setState({ createPlaylist: true });\n  }\n\n  // load page for user to edit playlist\n  loadEditPlaylist = () => {\n    this.setState({ editPlaylist: true });\n  }\n\n  // delete the specified playlist\n  deletePlaylist = async (playlistId) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access')}`\n      },\n    };\n    await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlistId}/`, requestOptions);\n  }\n\n  // go back to view of all playlists, don't have any special windows\n  back = () => {\n    this.setState({ playlist: false, createPlaylist: false, editPlaylist: false });\n    window.location.reload();\n  }\n\n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    \n    const cardStyle = {\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      maxWidth: '15rem',\n      margin: '1rem',\n      display: 'flex',\n    }\n\n    const createPlaylistButtonStyle = {\n      marginLeft: '1rem',\n    }\n\n    if (this.state.sendToLogin) {\n      return (\n        <Redirect to=\"/#/login\"></Redirect>\n      )\n    }\n    else if (this.state.createPlaylist){\n      return (\n        <CreatePlaylist back={this.back}></CreatePlaylist>\n      )\n    }\n    else if (this.state.editPlaylist){\n      return (\n        <EditPlaylist playlist={this.state.currentPlaylist} back={this.back}></EditPlaylist>\n      )\n    }\n    else if (!localStorage.getItem('access')){\n      return (\n      <div style={mainDivStyle}>\n       <h1 style={{ color: 'white' }}>Please sign in to save playlists</h1>\n      </div>\n      )\n    }\n    else if (this.state.playlists.length === 0) {\n      return (\n        <div style={mainDivStyle}>\n         <h1 style={{ color: 'white' }}>You have no playlists at the moment</h1>\n         <Button variant=\"secondary\" onClick={this.loadCreatePlaylist}>Create Playlist</Button>\n        </div>\n        )\n    }\n    else if (this.state.playlist) {\n      return (\n        <div style={mainDivStyle}>\n        <Button variant=\"secondary\" onClick={this.back}>Back</Button>\n        <Playlist \n          editPlaylist={this.loadEditPlaylist}\n          back={this.back}\n          delete={this.deletePlaylist}\n          playlist={this.state.currentPlaylist}\n          song={this.props.song}\n          songWrappers={this.state.songWrappers} \n          playSingleSong={this.props.playSingleSong}\n          playPlaylist={this.props.playPlaylist}\n          pause={this.props.pause} \n          play={this.props.play}\n          playing={this.props.playing}>\n        </Playlist>\n      </div>\n        )\n    }\n    return (\n      <div style={mainDivStyle}>\n          <h1>{`${localStorage.getItem('username')}'s Playlists`}</h1>\n          <Button style={createPlaylistButtonStyle} variant=\"secondary\" \n          onClick={this.loadCreatePlaylist}>Create Playlist</Button>\n          {this.state.playlists.map((playlist, index) => {\n          return (\n          <Card style={cardStyle} key={index}>\n            <Card.Body>\n              <Card.Title>{playlist.name}</Card.Title>\n              <Button onClick={() => this.loadPlaylist(playlist)}>view</Button>\n            </Card.Body>\n          </Card>\n          )\n        })}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Play from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\n\n// song component displayed within album component\nexport default class AlbumSong extends React.Component {\n\n  render() {\n    const cardStyle = {\n      position: 'relative',\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      marginBottom: '0.5rem',\n      minHeight: '48px',\n    }\n    let playButtonShow = true;\n    if (JSON.stringify(this.props.song) === JSON.stringify(this.props.songWrapper.song) && this.props.playing){\n      playButtonShow = false;\n    }\n    if (playButtonShow) {\n      return (\n      <div style={cardStyle} key={this.props.index}>\n          <div>\n            <Play onClick={() => this.props.playSingleSong(this.props.songWrapper.song.id)}></Play> \n          </div>\n          <div>{this.props.songWrapper.song.name}</div>\n          <div>{this.props.songWrapper.song.artist.name}</div>\n      </div>\n      )\n    }\n    return (\n        <div style={cardStyle} key={this.props.index}>\n            <div>\n              <Pause onClick={() => {\n                this.props.pause()\n                }}></Pause>\n            </div>\n            <div>{this.props.songWrapper.song.name}</div>\n            <div>{this.props.songWrapper.song.artist.name}</div>\n        </div>\n    )\n  }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport AlbumSong from \"./albumSong\";\nconst images = require.context(\"../../asssets/images\", true);\n\n// album component\nexport default class Album extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      songs: [],\n    }\n  }\n\n  render() {\n\n    const infoDivStyle = {\n      color: 'white',\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      marginBottom: '0.5rem',\n    }\n    const albumCoverImgStyle = {\n      height: '100%',\n      width: 'auto'\n    }\n    const imgContainerDivStyle = {\n      width: '100%',\n      height: '200px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n\n    return (\n      <div>\n        <div style={imgContainerDivStyle}>\n          <img style={albumCoverImgStyle} src={images(`./${this.props.album.img_url}`).default} alt=\"Album cover\"></img>\n        </div>\n        <h1>{this.props.album.name}</h1>\n        <Button onClick={() => this.props.playPlaylist(this.props.album.id)}>Play Entire Album</Button>\n        <div style={infoDivStyle}>\n          <div>Play</div>\n          <div>Song</div>\n          <div>Artist</div>\n        </div>\n        {this.props.songWrappers.map((songWrapper, index) => {\n        return (\n          <AlbumSong \n          index={index} \n          songWrapper={songWrapper} \n          song={this.props.song}\n          playSingleSong={this.props.playSingleSong} \n          play={this.props.play}\n          pause={this.props.pause}\n          playing={this.props.playing}\n          ></AlbumSong>\n        )\n        })}\n    </div>\n    )\n  }\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Playlist from \"./playlist\";\nimport Album from \"./album\";\n\n// browse page component\nexport default class Browse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: [],\n      artistName: \"\",\n      playlist: false,\n      currentPlaylist: {},\n      songWrappers: [],\n      playlists: [],\n      artistEssentials: [],\n      newSingles: {},\n      displayAlbum: false,\n      album: {},\n    }\n  }\n  async componentDidMount() {\n    // need to set curated playlists for artists, singles, and albums\n    const essentials = await fetch(`https://desi-music-player.herokuapp.com/api/artists/artist/${1}/essentials/`)\n    const jEssentials = await essentials.json();\n    const newSingles = await fetch(`https://desi-music-player.herokuapp.com/api/curatedplaylists/curatedplaylist/10/`)\n    const jnewSingles = await newSingles.json();\n    const album = await fetch(`https://desi-music-player.herokuapp.com/api/albums/album/8/`)\n    const jAlbum = await album.json();\n    this.setState({\n      album: jAlbum,\n      newSingles: jnewSingles,\n      artistEssentials: jEssentials,\n    });\n  }\n\n  loadAlbum = async (album) => {\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${album.id}/songs/`)\n    const jResponse = await response.json();\n    this.setState({ \n      playlist: false,\n      songWrappers: jResponse,\n      displayAlbum: true,\n    });\n  } \n\n  loadPlaylist = async (playlist) => {\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlist.id}/songs/`)\n    const jResponse = await response.json();\n    this.setState({ \n      playlist: true,\n      displayAlbum: false,\n      currentPlaylist: playlist,\n      songWrappers: jResponse,\n      playlistId: playlist.id,\n    });\n  }\n\n  back = () => {\n    this.setState({  playlist: false, displayAlbum: false });\n  }\n  \n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    const cardStyle = {\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      maxWidth: '15rem',\n      margin: '1rem'\n    }\n    const newSinglesDivStyle = {\n      borderTop: '1px solid white',\n      borderBottom: '1px solid white',\n    }\n    const backButtonStyle = {\n      margin: '1rem',\n    }\n\n    if (this.state.playlist) {\n      return (\n        <div style={mainDivStyle}>\n          <Button variant=\"secondary\" style={backButtonStyle} onClick={this.back}>Back</Button>\n          <Playlist \n            playlist={this.state.currentPlaylist}\n            song={this.props.song}\n            songWrappers={this.state.songWrappers} \n            playSingleSong={this.props.playSingleSong}\n            playPlaylist={this.props.playPlaylist}\n            pause={this.props.pause} \n            play={this.props.play}\n            playing={this.props.playing}>\n          </Playlist>\n        </div>\n        )\n    }\n    else if (this.state.displayAlbum) {\n      return (\n        <div style={mainDivStyle}>\n          <Button variant=\"secondary\" style={backButtonStyle} onClick={this.back}>Back</Button>\n          <Album \n            album={this.state.album}\n            song={this.props.song}\n            songWrappers={this.state.songWrappers} \n            playSingleSong={this.props.playSingleSong}\n            playPlaylist={this.props.playPlaylist}\n            pause={this.props.pause} \n            play={this.props.play}\n            playing={this.props.playing}\n            >\n          </Album>\n        </div>\n        )\n    }\n    return (\n      <div style={mainDivStyle}>\n        <h1>FRESH NEW ARTISTS</h1>\n        {this.state.artistEssentials.map((playlist, index) => {\n          return (\n          <Card style={cardStyle} key={index}>\n            <Card.Body>\n              <Card.Title>{playlist.name}</Card.Title>\n              <Button onClick={() => this.loadPlaylist(playlist)}>view</Button>\n            </Card.Body>\n          </Card>\n          )\n        })}\n        <div style={newSinglesDivStyle}>\n          <h1>FRESH NEW SINGLES</h1>\n            <Card style={cardStyle}>\n              <Card.Body>\n                <Card.Title>New Singles</Card.Title>\n                <Button onClick={() => this.loadPlaylist(this.state.newSingles)}>view</Button>\n              </Card.Body>\n            </Card>\n        </div>\n        <h1>HOTTEST ALBUMS</h1>\n        <Card style={cardStyle}>\n            <Card.Body>\n              <Card.Title>{this.state.album.name}</Card.Title>\n              <Button onClick={() => this.loadAlbum(this.state.album)}>view</Button>\n            </Card.Body>\n          </Card>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Album from \"./album\";\n\n// page that displays 'hot' albums\nexport default class Albums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      albums: [],\n      albumObj: {},\n      album: false,\n      songs: [],\n    }\n  }\n  async componentDidMount() {\n    const albums = await fetch(`https://desi-music-player.herokuapp.com/api/albums/`);\n    const jAlbums = await albums.json();\n    this.setState({\n      albums: jAlbums,\n    });\n  }\n\n  loadAlbum = async (album) => {\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${album.id}/songs/`)\n    const jResponse = await response.json();\n    this.setState({ \n      album: true,\n      albumObj: album,\n      songs: jResponse \n    });\n  }\n\n  back = () => {\n    this.setState({ album: false });\n  }\n\n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    const cardStyle = {\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      width: '15rem',\n      minHeight: '48px',\n      margin: '1rem',\n      display: 'grid',\n      gridTemplateColumns: ' 1fr 1fr 1fr',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '0.5rem',\n    }\n\n    if (this.state.album) { \n      return (\n        <div style={mainDivStyle}>\n          <Button variant=\"secondary\" onClick={this.back}>Back</Button>\n          <Album \n            album={this.state.albumObj}\n            song={this.props.song}\n            songWrappers={this.state.songs} \n            playSingleSong={this.props.playSingleSong}\n            playPlaylist={this.props.playPlaylist}\n            pause={this.props.pause} play={this.props.play}\n            playing={this.props.playing}\n            >  \n          </Album>\n        </div>\n        \n      )\n    }\n    return (\n      <div style={mainDivStyle}>\n        <h1>HOTTEST ALBUMS</h1>\n        {this.state.albums.map((album, index) => {\n          return (\n          <Card style={cardStyle} key={index}>\n            <Card.Body>\n              <Card.Title>{album.name}</Card.Title>\n              <Button onClick={() => {\n                this.loadAlbum(album)\n                }} variant=\"primary\">View</Button>\n            </Card.Body>\n          </Card>\n          )\n        })}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Playlist from \"./playlist\";\n\n// page that lists 'hot' artists, notably Midterm Memory\nexport default class Artists extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: [],\n      artistName: \"\",\n      artist: false,\n      playlist: false,\n      playlistName: \"\",\n      songWrappers: [],\n      playlists: [],\n    }\n  }\n\n  async componentDidMount() {\n    const artists = await fetch(`https://desi-music-player.herokuapp.com/api/artists/`);\n    const jArtists = await artists.json();\n    this.setState({\n      artists: jArtists,\n    });\n  }\n\n  loadArtist = async (artist) => {\n    // change this below\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/artists/artist/${artist.id}/essentials/`)\n    const jResponse = await response.json();\n    this.setState({ \n      artist: true,\n      playlist: false,\n      artistName: artist.name,\n      playlists: jResponse,\n    });\n  }\n\n  loadPlaylist = async (playlist) => {\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlist.id}/songs/`)\n    const jResponse = await response.json();\n    this.setState({ \n      artist: false,\n      playlist: true,\n      currentPlaylist: playlist,\n      songWrappers: jResponse \n    });\n  }\n\n  backToArtists = () => {\n    this.setState({ artist: false });\n  }\n\n  backToArtist = () => {\n    this.setState({ \n      playlist: false,\n      artist: true,\n    });\n  }\n\n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    const cardStyle = {\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      maxWidth: '15rem',\n      margin: '1rem',\n    }\n\n    if (this.state.artist) {\n      // display artist's info\n      return (\n        <div style={mainDivStyle}>\n          <Button variant=\"secondary\" onClick={this.backToArtists}>Back</Button>\n          <h1>{this.state.artistName}</h1>\n            {this.state.playlists.map((playlist, index) => {\n            return (\n            <Card style={cardStyle} key={index}>\n              <Card.Body>\n                <Card.Title>{playlist.name}</Card.Title>\n                <Button onClick={() => this.loadPlaylist(playlist)}>View</Button>\n              </Card.Body>\n            </Card>\n            )\n          })}\n      </div>\n      )\n    }\n\n    else if (this.state.playlist) {\n      // display selected playlist/album\n      return (\n      <div style={mainDivStyle}>  \n        <Button variant=\"secondary\" onClick={this.backToArtist}>Back</Button>\n        <Playlist playlist={this.state.currentPlaylist} \n        songWrappers={this.state.songWrappers} playSingleSong={this.props.playSingleSong}\n        ></Playlist>\n      </div>\n      )\n    }\n    // otherwise display the 'hottest' artists\n    return (\n      <div style={mainDivStyle}>\n        <h1>HOTTEST ARTISTS</h1>\n        {this.state.artists.map((artist, index) => {\n          return (\n          <Card style={cardStyle} key={index}>\n            <Card.Body>\n              <Card.Title>{artist.name}</Card.Title>\n              <Button onClick={() => {\n                this.loadArtist(artist)\n                }} variant=\"primary\">View</Button>\n            </Card.Body>\n          </Card>\n          )\n        })}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Playlist from \"./playlist\";\n\n// this is the songs page component that displays the 'hottest songs' playlist\nexport default class Songs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songWrappers: [],\n      currentPlaylist: {},\n    }\n  }\n\n  // loads the 'hottest songs' playlist and loads the pertinent information into\n  // state\n  async componentDidMount() {\n    // this fetch should get the curated playlist 'New Singles' \n    const songs = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${10}/songs/`);\n    const jSongs = await songs.json();\n    const playlist = await fetch(`https://desi-music-player.herokuapp.com/api/curatedplaylists/curatedplaylist/10/`);\n    const jPlaylist = await playlist.json();\n    this.setState({\n      songWrappers: jSongs,\n      currentPlaylist: jPlaylist,\n    });\n  }\n  \n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n    }\n    return (\n      <div style={mainDivStyle}>\n        <Playlist \n        playlist={this.state.currentPlaylist}\n        song={this.props.song}\n        songWrappers={this.state.songWrappers} \n        playSingleSong={this.props.playSingleSong}\n        playPlaylist={this.props.playPlaylist}\n        pause={this.props.pause} play={this.props.play}\n        playing={this.props.playing}\n        ></Playlist>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Nav from \"../homepagecomponents/nav\";\nimport Header from \"../homepagecomponents/header\"\nimport ListenNow from \"../homepagecomponents/listennow\";\nimport Browse from \"../homepagecomponents/browse\";\nimport Albums from \"../homepagecomponents/albums\";\nimport Artists from \"../homepagecomponents/artists\";\nimport Songs from \"../homepagecomponents/songs\";\nconst mp3s = require.context(\"../../asssets/songs\", true);\n\nexport default class HomeDesktop extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 'listennow', // used for conditional rendering\n      playlist: [],\n      playing: false,\n      songIndex: 0, \n      song: {},\n      album: {},\n      artist: {},\n      infoPlaylistId: 0, // id of playlist currently being displayed\n      audio: new Audio(mp3s('./maineday6.m4a').default),\n      duration: 0,\n      currentTime: 0,\n      volume: 1,\n    }\n  }\n  async componentDidMount() {\n    console.log(\"desktop version\");\n    const song = await fetch(`https://desi-music-player.herokuapp.com/api/songs/song/${6}/`);\n    const jSong = await song.json();\n    // set playlist to empty but queue the just acquired song\n    this.setPlayListSong([], jSong);\n    this.pause();\n  }\n\n  setPlayListSong = (playlist, song) => {\n    this.setSong(song, 0);\n    this.setState({ \n      playlist: playlist,\n    });\n  }\n\n  setSong = (song, index) => {\n    this.state.audio.pause();\n    const newAudio = new Audio(mp3s(`./${song.url}`).default)\n    // these three event listeners load data into state once the long\n    // is fully loaded\n    newAudio.addEventListener('timeupdate', () => {\n      this.setState({ \n        currentTime: newAudio.currentTime,\n      });\n    });\n    newAudio.addEventListener('ended', () => {\n      this.setState({\n        playing: false,\n      });\n    });\n    newAudio.addEventListener('loadedmetadata', () => {\n      this.setState({ \n        duration: newAudio.duration,\n      });\n    })\n    if (this.state.playing) {\n      newAudio.play();\n    }\n    // makes the new audio have the current volume set by the user\n    this.controlVolume(newAudio);\n    this.setState({ \n      audio: newAudio,\n      artist: song.artist,\n      song: song,\n      songIndex: index,\n    });\n  }\n\n  controlVolume = (audio) => {\n    audio.volume = this.state.volume;\n  }\n\n  // get songs and keep array of songs in state\n  playPlaylist = async (playlistId) => {\n    this.state.audio.pause();\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlistId}/songs/`);\n    const jResponse = await response.json();\n    this.setPlayListSong(jResponse, jResponse[0].song);\n    this.play();\n  }\n\n  // similar to above but it only gets one song and puts an empty array in state\n  playSingleSong = async (songId) => {\n    const song = await fetch(`https://desi-music-player.herokuapp.com/api/songs/song/${songId}/`);\n    const jSong = await song.json();\n    this.setPlayListSong([], jSong);\n    this.pause();\n    this.play();\n  }\n\n  // increment the index if possible and if incremented, load the \n  // next song from the playlist array\n  nextSong = () => {\n    let index = this.state.songIndex;\n    if (index < this.state.playlist.length - 1) {\n      this.state.audio.pause();\n      index++;\n      this.setSong(this.state.playlist[index].song, index);\n    }\n  }\n\n  // similar to next song but in reverse, with the added caveat that \n  // if the song is more than two seconds in or there's no song before it\n  // in the queue, then the song just goes back to the beginning\n  prevSong = () => {\n    let index = this.state.songIndex;\n    if (this.state.currentTime > 2 || index === 0) {\n      let tempAudio = this.state.audio;\n      tempAudio.currentTime = 0;\n      this.setState({ audio: tempAudio });\n    }\n    else {\n      this.state.audio.pause();\n      index--;\n      this.setSong(this.state.playlist[index].song, index);\n    }\n  }\n\n  play = () => {\n    this.setState({ playing: true })\n    this.state.audio.play();\n  }\n\n  pause = () => {\n    this.setState({ playing: false })\n    this.state.audio.pause();\n  }\n\n  // swap audio in state with copy of audio with the volume adjusted\n  volumeChange = (event) => {\n    const newVolume = event.target.value/100;\n    let tempAudio = this.state.audio;\n    tempAudio.volume = newVolume;\n    this.setState({ audio: tempAudio, volume: newVolume })\n  }\n\n  // same as volume change but with time\n  timeScrub = (event) => {\n    const newTime = event.target.value/100 * this.state.audio.duration;\n    let tempAudio = this.state.audio;\n    tempAudio.currentTime = newTime;\n    this.setState({ audio: tempAudio });\n  }\n\n  setPage = (page) => {\n    this.setState({ page });\n  }\n\n  setPlaylistView = (id) => {\n    this.setState({ infoPlaylistId: id });\n  }\n\n  render() {\n    const outerDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      minHeight: '100vh',\n    }\n    const outerMainDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    }\n    const navDivStyle = {\n      display: 'flex',\n      width: '20rem',\n    }\n    const headerDivStyle = {\n      display: 'flex',\n      width: '100%',\n      height: '4rem'\n    }\n    const mainDivStyle = {\n      width: '100%',\n      height: '100%'\n    }\n    // switch statement that returns different components depending on \n    // homepage state\n    let page;\n    switch (this.state.page) {\n      case 'listennow':\n        page = <ListenNow \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n          >\n        </ListenNow>\n        break;\n      case 'browse':\n        page = \n        <Browse \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n        >\n        </Browse>\n        break;\n      case 'artists':\n        page = <Artists \n        playPlaylist={this.playPlaylist} \n        setPlaylistView={this.setPlaylistView} \n        setPage={this.setPage} \n        playSingleSong={this.playSingleSong} \n        pause={this.pause} play={this.play}\n        song={this.state.song} \n        playing={this.state.playing}>\n        </Artists>\n        break;\n      case 'albums':\n        page = \n        <Albums \n        playPlaylist={this.playPlaylist} \n        setPlaylistView={this.setPlaylistView} \n        setPage={this.setPage} \n        playSingleSong={this.playSingleSong} \n        pause={this.pause} play={this.play}\n        song={this.state.song} \n        playing={this.state.playing}>\n        </Albums>\n        break;\n      case 'songs':\n        page = \n        <Songs \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n        >\n        </Songs>\n        break;\n      default:\n        page = <ListenNow></ListenNow>\n    }\n    return (\n      <div style={outerDivStyle}>\n        <div style={navDivStyle}>\n          <Nav page={this.state.page} setPage={this.setPage}></Nav>\n        </div>\n        <div style={outerMainDivStyle}>\n          <div style={headerDivStyle}>\n           <Header \n            audio={this.state.audio} \n            play={this.play} pause={this.pause} \n            playBool={this.state.playing} \n            timeScrub={this.timeScrub} \n            volumeChange={this.volumeChange} \n            nextSong={this.nextSong} \n            prevSong={this.prevSong} \n            album={this.state.album}\n            artist={this.state.artist} \n            song={this.state.song}\n            duration={this.state.duration} \n            currentTime={this.state.currentTime}\n           ></Header>\n          </div>\n          <div style={mainDivStyle}>\n            {page}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport PLayCircle from '@material-ui/icons/PlayCircleOutlineOutlined';\nimport MusicNote from '@material-ui/icons/MusicNote';\nimport Equalizer from '@material-ui/icons/Equalizer';\nimport Gear from '@material-ui/icons/Settings';\nimport '../../css/nav.css';\n\nexport default class NavMobile extends React.Component {\n  \n  render() {\n    const outerDivStyle = {\n      backgroundColor: 'rgb(57, 67, 82)',  \n      height: '100%',\n      width: '100vw',\n      position: 'relative',\n      paddingTop: '1rem',\n    }\n    const ulStyle = { \n      listStyle: 'none', \n      color: 'white', \n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr 1fr',\n    }\n    const cardStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      borderRadius: '15px',\n      height: '4rem',\n      // margin: '1rem 0 1rem 0'\n    }\n    const selectedCardStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      borderRadius: '15px',\n      height: '4rem',\n      // margin: '1rem 0 1rem 0',\n      backgroundColor: 'rgba(202, 200, 200, 0.2)'\n    }\n    const cardTextDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '100%',\n    }\n    const iconStyle = {\n      fontSize: '2rem',\n      color: 'rgb(219, 9, 89)',\n      marginTop: '0.25rem',\n    }\n\n    // default styles for the tabs in the nav bar\n    let listennow =\n    <div style={cardStyle}>\n      <PLayCircle style={iconStyle}></PLayCircle>\n      <div style={cardTextDivStyle}>\n        <p>Listen Now</p>\n      </div>\n    </div>;\n\n    let browse = \n    <div style={cardStyle}>\n      <MusicNote style={iconStyle}></MusicNote>\n      <div style={cardTextDivStyle}>\n        <p>Browse</p>\n      </div>\n    </div>;\n\n    let songs = \n    <div style={cardStyle}>\n      <Equalizer style={iconStyle}></Equalizer>\n      <div style={cardTextDivStyle}>\n      <p>Songs</p>\n      </div>\n    </div>;\n\n    // replaces the default tab with a highlighted tab for the page that \n    // is currently selected\n    switch (this.props.page) {\n      case 'listennow':\n        listennow = \n        <div style={selectedCardStyle}>\n          <PLayCircle style={iconStyle}></PLayCircle>\n          <div style={cardTextDivStyle}>\n            <p>Listen Now</p>\n          </div>\n        </div>;\n        break;\n      case 'browse':\n        browse = \n        <div style={selectedCardStyle}>\n          <MusicNote style={iconStyle}></MusicNote>\n          <div style={cardTextDivStyle}>\n            <p>Browse</p>\n          </div>\n        </div>;\n        break;\n      case 'songs':\n        songs = \n        <div style={selectedCardStyle}>\n            <Equalizer style={iconStyle}></Equalizer>\n            <div style={cardTextDivStyle}>\n            <p>Songs</p>\n            </div>\n          </div>;\n      break;\n      default: \n      listennow = \n        <div style={selectedCardStyle}>\n          <PLayCircle style={iconStyle}></PLayCircle>\n          <div style={cardTextDivStyle}>\n            <p>Listen Now</p>\n          </div>\n        </div>;\n    }\n    return (\n      <div style={outerDivStyle}>\n        <div className='nav-list' style={ulStyle}>\n          <div onClick={() => this.props.setPage('listennow')}>\n            {listennow}\n          </div>\n          <div onClick={() => this.props.setPage('browse')}>\n            {browse}\n          </div>\n          <div onClick={() => this.props.setPage('songs')}>\n           {songs}\n          </div>\n          <div>\n            <a href=\"/#/settings\" style={{ color: 'white' }}>\n              <div style={cardStyle}>\n                <Gear style={iconStyle}></Gear>\n                <div style={cardTextDivStyle}>\n                <p>Settings</p>\n                </div>\n              </div>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport RewindArrow from '@material-ui/icons/FastRewind';\nimport FfArrow from '@material-ui/icons/FastForward';\nimport PlayArrow from '@material-ui/icons/PlayArrow'\nimport Pause from '@material-ui/icons/Pause'\nimport '../../css/header.css'\n\nexport default class HeaderMobile extends React.Component {\n  \n  render() {\n    const outerDivStyle = {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      width: '100vw',\n      height: '100%',\n    }\n    const arrowDivStyle = {\n      color: 'white',\n      margin: 'auto',\n    }\n    const playArrowStyle = {\n      fontSize: '3rem'\n    }\n    const arrowStyle = {\n      fontSize: '2rem'\n    }\n    const playingSliderDiv = {\n      display: 'flex',\n      flexDirection: 'column',\n    }\n    const songInfoDiv = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white',\n      width: '100%',\n      height: '3rem',\n      margin: 'auto',\n    }\n    \n    // return pause arrow or play arrow based on if song is currently playing\n    // or not\n    let playpause; \n    if (this.props.playBool) {\n      playpause = <Pause onClick={() => this.props.pause()} style={playArrowStyle}></Pause>\n    }\n    else {\n      playpause = <PlayArrow onClick={() => this.props.play()} style={playArrowStyle}></PlayArrow>\n    }\n\n    return (\n      <div style={outerDivStyle} onClick={this.props.showAlbumNav}>\n        <div style={arrowDivStyle}>\n          <RewindArrow onClick={this.props.prevSong} style={arrowStyle}></RewindArrow>\n          {playpause}\n          <FfArrow onClick={this.props.nextSong} style={arrowStyle}></FfArrow>\n        </div>\n        <div style={playingSliderDiv}>\n          <div style={songInfoDiv}>\n            <div>{this.props.song.name}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport ExpandArrow from '@material-ui/icons/ExpandMore';\nimport RewindArrow from '@material-ui/icons/FastRewind';\nimport FfArrow from '@material-ui/icons/FastForward';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport '../../css/header.css'\nconst images = require.context(\"../../asssets/images\", true);\n\n// component that pops up on mobile with large album view and \n// with more detailed controls\nexport default class AlbumMobileNav extends React.Component {\n  \n  render() {\n    const outerDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      width: '100vw',\n      height: '100%',\n    }\n    const collapseArrowDivStyle = {\n      color: 'white',\n      width: '100vw',\n      display: 'flex',\n      justifyContent: 'flex-start',\n    }\n    const arrowDivStyle = {\n      color: 'white',\n      // margin: 'auto',\n    }\n    const playArrowStyle = {\n      fontSize: '5rem'\n    }\n    const arrowStyle = {\n      fontSize: '4rem'\n    }\n    const playingSliderDiv = {\n      display: 'flex',\n      flexDirection: 'column',\n    }\n    const songInfoDiv = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      color: 'white',\n      width: '100%',\n      height: '3rem',\n      fontSize: '1rem',\n    }\n    const albumCoverImgStyle = {\n      marginTop: '5rem',\n      height: '250px',\n      width: '250px'\n    }\n    const volumeSliderDivStyle = {\n      color: 'white',\n      width: '12rem',\n      height: '2rem',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginBottom: '1rem',\n    }\n    const volumeDownStyle = {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'col',\n      justifyContent: 'flex-end'\n    }\n    const volumeUpStyle = {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'col',\n      justifyContent: 'center'\n    }\n    const timeSliderDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      color: 'white',\n      alignItems: 'center'\n    }\n    \n    const sliderVolume = 100 * this.props.audio.volume;\n    let elapsedTimePercent = this.props.currentTime/this.props.duration * 100;\n    if (isNaN(elapsedTimePercent)) {\n      elapsedTimePercent = 0\n    };\n    let current = 0;\n    if (!isNaN(this.props.currentTime)) {\n      current = new Date(this.props.currentTime * 1000).toISOString().substr(14, 5);\n    }\n    let total = 0;\n    if (!isNaN(this.props.duration)) {\n      total = new Date(this.props.duration * 1000).toISOString().substr(14, 5);\n    }\n    let playpause; \n    if (this.props.playBool) {\n      playpause = <Pause onClick={() => this.props.pause()} style={playArrowStyle}></Pause>\n    }\n    else {\n      playpause = <PlayArrow onClick={() => this.props.play()} style={playArrowStyle}></PlayArrow>\n    }\n\n    return (\n      <div style={outerDivStyle}>\n        <div style={collapseArrowDivStyle}>\n          <ExpandArrow style={arrowStyle} onClick={this.props.hideAlbumNav}></ExpandArrow>\n        </div>\n        <img style={albumCoverImgStyle} src={images(`./${this.props.song.album.img_url}`).default} \n        alt=\"Album cover\" className=\"albumCover\">\n        </img>\n        <div style={playingSliderDiv}>\n          <div style={songInfoDiv}>\n            <div>{this.props.artist.name}</div>\n            <div>{this.props.song.name}</div>\n          </div>\n          <div style={timeSliderDivStyle}>\n            <div>{current}</div>\n            <input className=\"slider-mobile\" type=\"range\" min=\"0\" max=\"100\" onChange={this.props.timeScrub} value={elapsedTimePercent}></input>\n            <div>{total}</div>\n          </div>\n        </div>\n        <div style={arrowDivStyle}>\n          <RewindArrow onClick={this.props.prevSong} style={arrowStyle}></RewindArrow>\n          {playpause}\n          <FfArrow onClick={this.props.nextSong} style={arrowStyle}></FfArrow>\n        </div>\n        <div style={volumeSliderDivStyle}>\n          <div style={volumeDownStyle}>\n            <VolumeDown/>\n          </div>\n          <input type=\"range\" min=\"1\" max=\"100\" onChange={this.props.volumeChange} value={sliderVolume} id=\"myRange\"/>\n          <div style={volumeUpStyle}>\n            <VolumeUp/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport NavMobile from \"../homepagecomponents/navMobile\";\nimport HeaderMobile from \"../homepagecomponents/headerMobile\"\nimport AlbumNavMobile from \"../homepagecomponents/albumNavMobile\"\nimport ListenNow from \"../homepagecomponents/listennow\";\nimport Browse from \"../homepagecomponents/browse\";\nimport Albums from \"../homepagecomponents/albums\";\nimport Artists from \"../homepagecomponents/artists\";\nimport Songs from \"../homepagecomponents/songs\";\nconst mp3s = require.context(\"../../asssets/songs\", true);\n\nexport default class HomeMobile extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 'listennow', // default is listennow, used for conditional rendering\n      playlist: [],\n      playing: false,\n      songIndex: 0, \n      song: {},\n      album: {},\n      artist: {},\n      // id of playlist that is being displayed\n      infoPlaylistId: 0,\n      audio: new Audio(mp3s('./maineday6.m4a').default),\n      duration: 0,\n      currentTime: 0,\n      volume: 1,\n      albumNav: false, // used in conditional rendering\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"mobile version\");\n    const song = await fetch(`https://desi-music-player.herokuapp.com/api/songs/song/${6}/`);\n    const jSong = await song.json();\n    // set playlist to empty but queue the just acquired song\n    this.setPlayListSong([], jSong);\n    this.pause();\n  }\n\n  setPlayListSong = (playlist, song) => {\n    this.setSong(song, 0);\n    this.setState({ \n      playlist: playlist,\n    });\n  }\n\n  setSong = (song, index) => {\n    this.state.audio.pause();\n    const newAudio = new Audio(mp3s(`./${song.url}`).default)\n    // these three event listeners load data into state once the long\n    // is fully loaded\n    newAudio.addEventListener('timeupdate', () => {\n      this.setState({ \n        currentTime: newAudio.currentTime,\n      });\n    });\n    newAudio.addEventListener('ended', () => {\n      this.setState({\n        playing: false,\n      });\n    });\n    newAudio.addEventListener('loadedmetadata', () => {\n      this.setState({ \n        duration: newAudio.duration,\n      });\n    })\n    if (this.state.playing) {\n      newAudio.play();\n    }\n    // makes the new audio have the current volume set by the user\n    this.controlVolume(newAudio);\n    this.setState({ \n      audio: newAudio,\n      artist: song.artist,\n      song: song,\n      songIndex: index,\n    });\n  }\n\n  controlVolume = (audio) => {\n    audio.volume = this.state.volume;\n  }\n\n  // get songs and keep array of songs in state\n  playPlaylist = async (playlistId) => {\n    this.state.audio.pause();\n    const response = await fetch(`https://desi-music-player.herokuapp.com/api/playlists/playlist/${playlistId}/songs/`);\n    const jResponse = await response.json();\n    this.setPlayListSong(jResponse, jResponse[0].song);\n    this.play();\n  }\n\n  // similar to above but it only gets one song and puts an empty array in state\n  playSingleSong = async (songId) => {\n    const song = await fetch(`hhttps://desi-music-player.herokuapp.com/api/songs/song/${songId}/`);\n    const jSong = await song.json();\n    this.setPlayListSong([], jSong);\n    this.pause();\n    this.play();\n  }\n\n  // increment the index if possible and if incremented, load the \n  // next song from the playlist array\n  nextSong = () => {\n    let index = this.state.songIndex;\n    if (index < this.state.playlist.length - 1) {\n      this.state.audio.pause();\n      index++;\n      this.setSong(this.state.playlist[index].song, index);\n    }\n  }\n\n  // similar to next song but in reverse, with the added caveat that \n  // if the song is more than two seconds in or there's no song before it\n  // in the queue, then the song just goes back to the beginning\n  prevSong = () => {\n    let index = this.state.songIndex;\n    if (this.state.currentTime > 2 || index === 0) {\n      let tempAudio = this.state.audio;\n      tempAudio.currentTime = 0;\n      this.setState({ audio: tempAudio });\n    }\n    else {\n      this.state.audio.pause();\n      index--;\n      this.setSong(this.state.playlist[index].song, index);\n    }\n  }\n\n  play = () => {\n    this.setState({ playing: true })\n    this.state.audio.play();\n  }\n\n  pause = () => {\n    this.setState({ playing: false })\n    this.state.audio.pause();\n  }\n\n  // swap audio in state with copy of audio with the volume adjusted\n  volumeChange = (event) => {\n    const newVolume = event.target.value/100;\n    let tempAudio = this.state.audio;\n    tempAudio.volume = newVolume;\n    this.setState({ audio: tempAudio, volume: newVolume })\n  }\n\n  // same as volume change but with time\n  timeScrub = (event) => {\n    const newTime = event.target.value/100 * this.state.audio.duration;\n    let tempAudio = this.state.audio;\n    tempAudio.currentTime = newTime;\n    this.setState({ audio: tempAudio });\n  }\n\n  setPage = (page) => {\n    this.setState({ page });\n  }\n\n  setPlaylistView = (id) => {\n    this.setState({ infoPlaylistId: id });\n  }\n\n  showAlbumNav = () => {\n    this.setState({ albumNav: true });\n  }\n\n  hideAlbumNav = () => {\n    this.setState({ albumNav: false });\n  }\n\n  render() {\n    const outerDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100vh',\n    }\n    const outerMainDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    }\n    const navDivStyle = {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n    const headerDivStyle = {\n      display: 'flex',\n      width: '100%',\n      height: '3rem'\n    }\n    const mainDivStyle = {\n      width: '100%',\n      height: 'calc(100vh - 8rem)',\n      paddingBottom: '1rem',\n      overflow: 'auto',\n      backgroundColor: 'rgb(45, 45, 45)',\n    }\n    const footerStyle = {\n      position: 'fixed',\n      bottom: '0'\n    }\n    \n    if (this.state.albumNav) {\n      // this is where the album overtakes the screen along with some \n      // other controls\n      return (\n          <div style={outerDivStyle}>\n            <div style={outerMainDivStyle}>\n            <AlbumNavMobile\n                  hideAlbumNav={this.hideAlbumNav}\n                  audio={this.state.audio} \n                  play={this.play} pause={this.pause} \n                  playBool={this.state.playing} \n                  timeScrub={this.timeScrub} \n                  volumeChange={this.volumeChange} \n                  nextSong={this.nextSong} \n                  prevSong={this.prevSong} \n                  album={this.state.album}\n                  artist={this.state.artist} \n                  song={this.state.song}\n                  duration={this.state.duration} \n                  currentTime={this.state.currentTime}\n              ></AlbumNavMobile>\n            </div>\n          </div>\n      );\n    }\n    \n    let page;\n    switch (this.state.page) {\n      case 'listennow':\n        page = <ListenNow \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n          >\n        </ListenNow>\n        break;\n      case 'browse':\n        page = \n        <Browse \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n        >\n        </Browse>\n        break;\n      case 'artists':\n        page = <Artists \n        playPlaylist={this.playPlaylist} \n        setPlaylistView={this.setPlaylistView} \n        setPage={this.setPage} \n        playSingleSong={this.playSingleSong} \n        pause={this.pause} play={this.play}\n        song={this.state.song} \n        playing={this.state.playing}>\n        </Artists>\n        break;\n      case 'albums':\n        page = \n        <Albums \n        playPlaylist={this.playPlaylist} \n        setPlaylistView={this.setPlaylistView} \n        setPage={this.setPage} \n        playSingleSong={this.playSingleSong} \n        pause={this.pause} play={this.play}\n        song={this.state.song} \n        playing={this.state.playing}>\n        </Albums>\n        break;\n      case 'songs':\n        page = \n        <Songs \n          playPlaylist={this.playPlaylist} \n          setPlaylistView={this.setPlaylistView} \n          setPage={this.setPage} \n          playSingleSong={this.playSingleSong} \n          pause={this.pause} play={this.play}\n          song={this.state.song} \n          playing={this.state.playing}\n        >\n        </Songs>\n        break;\n      default:\n        page = <ListenNow></ListenNow>\n    }\n    return (\n      <div style={outerDivStyle}>\n        <div classname=\"main outer div\" style={outerMainDivStyle}>\n          <div className=\"main div\" style={mainDivStyle}>\n            {page}\n          </div>\n          <div style={footerStyle}>\n            <div style={headerDivStyle}>\n            <HeaderMobile\n              showAlbumNav={this.showAlbumNav}\n              audio={this.state.audio} \n              play={this.play} pause={this.pause} \n              playBool={this.state.playing} \n              timeScrub={this.timeScrub} \n              volumeChange={this.volumeChange} \n              nextSong={this.nextSong} \n              prevSong={this.prevSong} \n              album={this.state.album}\n              artist={this.state.artist} \n              song={this.state.song}\n              duration={this.state.duration} \n              currentTime={this.state.currentTime}\n            ></HeaderMobile>\n            </div>\n            <div style={navDivStyle}>\n              <NavMobile page={this.state.page} setPage={this.setPage}\n              showSettings={this.showSettings}>\n              </NavMobile>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport HomeDesktop from \"./home/homeDesktop\";\nimport HomeMobile from \"./home/homeMobile\";\n\n// the home page in which the main components are loaded, except for login\n// signup and settings pages\nexport default class Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      width: 0\n    }\n  }\n\n  // save window dimensions in state and add an event listener to \n  // update the dimensions if the page is resized\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  // get rid of the event listener when the component is going to unmount\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  // updates the window dimensions in state\n  updateWindowDimensions = () =>  {\n    this.setState({ width: window.innerWidth });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* display the mobile version if the screen size is less than 1000px */}\n        {this.state.width > 1000 ? <HomeDesktop></HomeDesktop> : <HomeMobile></HomeMobile>}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\n// !!! not completed admin page\nexport default class Admin extends React.Component {\n \n  render() {\n    const mainDivStyle = {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgb(45, 45, 45)',\n    }\n    const cardStyle = {\n      backgroundColor: 'rgb(100, 100, 100)',\n      color: 'white',\n      maxWidth: '15rem',\n      margin: '1rem'\n    }\n    return (\n      <div style={mainDivStyle}>\n        <Card style={cardStyle}>\n          <Card.Img variant=\"top\"/>\n          <Card.Body>\n            <Card.Title>Song</Card.Title>\n            <Card.Text>\n              Image\n            </Card.Text>\n            <Button variant=\"primary\">Listen</Button>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Redirect } from 'react-router'\n\nexport default class Login extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      redirect: false,\n    }\n  }\n  // save the value in the username input div in state\n  usernameChange = (event) => {\n    this.setState({ username: event.target.value })\n  }\n  // save the value in the password input div in state\n  passwordChange = (event) => {\n    this.setState({ password: event.target.value })\n  }\n  // send input information to backend and attempt to get refresh and access\n  // tokens, if not, report an error\n  login = async (event) => {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ user_name: this.state.username, password: this.state.password })\n    }\n    const response = await fetch('https://desi-music-player.herokuapp.com/api/token/', requestOptions)\n    const jResponse = await response.json();\n    if(response.status === 200) {\n      this.setState({message: \"Logged In\", redirect: true});\n      localStorage.setItem(\"refresh\", jResponse.refresh);\n      localStorage.setItem(\"access\", jResponse.access);\n      localStorage.setItem(\"username\", this.state.username);\n      // reload the page to redirect them\n      window.location.reload();\n    } \n    else {\n      this.setState({ message: \"There was a problem. Make sure you entered the correct username and password\" });\n    }\n  }\n\n  render() {\n    const divStyle = {\n      width: '100vw',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgb(45, 45, 45)',\n\n    }\n    const titleStyle = {\n      color: 'white',\n    }\n    const formStyle = {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n    const inputStyle = {\n      margin: '0.5rem',\n    }\n    const buttonStyle = {\n      margin: 'auto',\n      marginTop: '0.5rem',\n      width: '50%',\n      height: '2rem',\n    }\n    if (this.state.redirect) {\n      return (<Redirect to=\"/music-player/\"></Redirect>)\n    }\n    return (\n      <div style={divStyle}>\n        <h1 style={titleStyle}>Desi's Music App</h1>\n        <h3 style={titleStyle}>{this.state.message}</h3>\n        <form style={formStyle} onSubmit={this.login}>\n          <input style={inputStyle} value={this.state.username} onChange={this.usernameChange} placeholder=\"Username\"></input>\n          <input style={inputStyle} value={this.state.password} onChange={this.passwordChange} placeholder=\"Password\" type=\"password\"></input>\n          <input style={buttonStyle} type=\"submit\" value=\"Login\"></input>\n        </form>\n        <a href=\"/#/signup\">Signup</a>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Redirect } from 'react-router'\n\nexport default class Signup extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      username: \"\",\n      firstname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmation: \"\",\n      message: \"\",\n      redirect: false,\n    }\n  }\n  // save the value in the username input div in state\n  usernameChange = (event) => {\n    this.setState({ username: event.target.value })\n  }\n  // save the value in the first name input div in state\n  firstnameChange = (event) => {\n    this.setState({ firstname: event.target.value })\n  }\n  // save the value in the email input div in state\n  emailChange = (event) => {\n    this.setState({ email: event.target.value })\n  }\n  // save the value in the password input div in state\n  passwordChange = (event) => {\n    this.setState({ password: event.target.value })\n  }\n  // save the value in the password confirmation input div in state\n  confirmationChange = (event) => {\n    this.setState({ confirmation: event.target.value })\n  }\n\n  // perform checks to make sure inputs are valid and then send information\n  // to backend to see if 201 status is returned, which means the user has been\n  // created\n  signup = async (event) => {\n    if (this.state.password !== this.state.confirmation) {\n      this.setState({ message: \"Passwords must match\" });\n    }\n    else if (this.state.password.length < 8 || this.state.password.length >= 128) {\n      this.setState({ message: \"Password must be between 8 and 128 characters.\" });\n    }\n    else {\n      event.preventDefault();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ user_name: this.state.username, password: this.state.password, email: this.state.email })\n      }\n      const response = await fetch('https://desi-music-player.herokuapp.com/api/signup/create/', requestOptions)\n      if (response.status === 201) {\n        this.setState({ message: \"Signed up\" , redirect: true});\n      } \n      else if (response.status === 500) {\n        this.setState({ message: \"The username or email is taken, try another.\" });\n      }\n      else {\n        this.setState({ message: \"Try a different password, minimum 8 characters.\" });\n      }\n    }\n  }\n  render() {\n    const divStyle = {\n      width: '100vw',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgb(45, 45, 45)',\n\n    }\n    const titleStyle = {\n      color: 'white',\n    }\n    const formStyle = {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n    const inputStyle = {\n      margin: '0.5rem',\n    }\n    const buttonStyle = {\n      margin: 'auto',\n      marginTop: '0.5rem',\n      width: '50%',\n      height: '2rem',\n    }\n    if (this.state.redirect) {\n      return (<Redirect to=\"/music-player/#/login\"></Redirect>)\n    }\n\n    return (\n      <div style={divStyle}>\n        <h1 style={titleStyle}>Desi's Music App</h1>\n        <h3 style={titleStyle}>{this.state.message}</h3>\n        <form style={formStyle} onSubmit={this.signup}>\n          <input style={inputStyle} value={this.state.username} onChange={this.usernameChange} placeholder=\"Username\"></input>\n          <input style={inputStyle} value={this.state.email} onChange={this.emailChange} placeholder=\"Email\" type=\"email\"></input>\n          <input style={inputStyle} value={this.state.firstname} onChange={this.firstnameChange} placeholder=\"First Name\"></input>\n          <input style={inputStyle} value={this.state.password} onChange={this.passwordChange} placeholder=\"Password\" type=\"password\"></input>\n          <input style={inputStyle} value={this.state.confirmation} onChange={this.confirmationChange} placeholder=\"Confirm password\" type=\"password\"></input>\n          <input style={buttonStyle} type=\"submit\" value=\"Sign up\"></input>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { Redirect } from 'react-router'\n\n// settings page that at the moment just lets users navigate to login/logout \n// and signup pages depending on whether the user is currently signed in or not\nexport default class Settings extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n    }\n  }\n\n  logout = () => {\n    localStorage.clear();\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const divStyle = {\n      width: '100vw',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      backgroundColor: 'rgb(45, 45, 45)',\n      color: 'white',\n      padding: '1rem'\n    }\n    const headerDivStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%'\n    }\n\n    const backButtonDivStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n    }\n\n    if (this.state.redirect) {\n      return(\n        <Redirect to=\"/#/login\"></Redirect>\n      );\n    }\n\n    let loginLogoutSignup = \n    <div>\n        <a href=\"#/login\">\n          <Button variant=\"secondary\">Login</Button>\n        </a>\n        <a href=\"#/signup\">\n          <Button variant=\"secondary\">Signup</Button>\n        </a>\n    </div>\n    if (localStorage.getItem('access')){\n      loginLogoutSignup = \n        <Button variant=\"secondary\" onClick={this.logout}>Logout</Button>\n    }\n    return (\n      <div style={divStyle}>\n        <div style={headerDivStyle}>\n          <div style={backButtonDivStyle}>\n            <a href=\"/music-player/#/\">\n              <Button variant=\"secondary\"><ArrowBack></ArrowBack></Button>\n            </a>\n          </div>\n         <h1>Settings</h1>\n        </div>\n        {loginLogoutSignup}\n        <div>Created By Desi DeVaul</div>\n      </div>\n    )\n  }\n}","import './App.css';\nimport Home from './components/home';\nimport Admin from './components/admin';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Settings from './components/settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n\n  render() {\n    return(\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home></Home>}></Route>\n          <Route exact path=\"/admin\" render={() => <Admin></Admin>}></Route>\n          <Route exact path=\"/login\" render={() => <Login></Login>}></Route>\n          <Route exact path=\"/signup\" render={() => <Signup></Signup>}></Route>\n          <Route exact path=\"/settings\" render={() => <Settings></Settings>}></Route>\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}